Trying:
    vcs.show('3d_dual_scalar') # show all available 3d_dual_scalar
Expecting:
    *******************3d_dual_scalar Names List**********************
    ...
    *******************End 3d_dual_scalar Names List**********************
ok
Trying:
    ex=vcs.create3d_dual_scalar('3d_dual_scalar_ex1') # Create 3d_dual_scalar '3d_dual_scalar_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('3d_dual_scalar') # should now contain the '3d_dual_scalar_ex1' 3d_dual_scalar
Expecting:
    [...'3d_dual_scalar_ex1'...]
ok
Trying:
    vcs.show('3d_scalar') # show all available 3d_scalar
Expecting:
    *******************3d_scalar Names List**********************
    ...
    *******************End 3d_scalar Names List**********************
ok
Trying:
    ex=vcs.create3d_scalar('3d_scalar_ex1') # Create 3d_scalar '3d_scalar_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('3d_scalar') # should now contain the '3d_scalar_ex1' 3d_scalar
Expecting:
    [...'3d_scalar_ex1'...]
ok
Trying:
    vcs.show('3d_vector') # show all available 3d_vector
Expecting:
    *******************3d_vector Names List**********************
    ...
    *******************End 3d_vector Names List**********************
ok
Trying:
    ex=vcs.create3d_vector('3d_vector_ex1') # Create 3d_vector '3d_vector_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('3d_vector') # should now contain the '3d_vector_ex1' 3d_vector
Expecting:
    [...'3d_vector_ex1'...]
ok
Trying:
    vcs.show('boxfill') # show all available boxfill
Expecting:
    *******************Boxfill Names List**********************
    ...
    *******************End Boxfill Names List**********************
ok
Trying:
    ex=vcs.createboxfill('boxfill_ex1') # Create boxfill 'boxfill_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('boxfill') # should now contain the 'boxfill_ex1' boxfill
Expecting:
    [...'boxfill_ex1'...]
ok
Trying:
    ex2=vcs.createboxfill('boxfill_ex2','polar') # create 'boxfill_ex2' from 'polar' template
Expecting nothing
ok
Trying:
    vcs.listelements('boxfill') # should now contain the 'boxfill_ex2' boxfill
Expecting:
    [...'boxfill_ex2'...]
ok
Trying:
    vcs.show('colormap') # show all available colormap
Expecting:
    *******************Colormap Names List**********************
    ...
    *******************End Colormap Names List**********************
ok
Trying:
    ex=vcs.createcolormap('colormap_ex1') # Create colormap 'colormap_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('colormap') # should now contain the 'colormap_ex1' colormap
Expecting:
    [...'colormap_ex1'...]
ok
Trying:
    ex2=vcs.createcolormap('colormap_ex2','rainbow') # create 'colormap_ex2' from 'rainbow' template
Expecting nothing
ok
Trying:
    vcs.listelements('colormap') # should now contain the 'colormap_ex2' colormap
Expecting:
    [...'colormap_ex2'...]
ok
Trying:
    vcs.show('fillarea') # show all available fillarea
Expecting:
    *******************Fillarea Names List**********************
    ...
    *******************End Fillarea Names List**********************
ok
Trying:
    ex=vcs.createfillarea('fillarea_ex1') # Create fillarea 'fillarea_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('fillarea') # should now contain the 'fillarea_ex1' fillarea
Expecting:
    [...'fillarea_ex1'...]
ok
Trying:
    vcs.show('isofill') # show all available isofill
Expecting:
    *******************Isofill Names List**********************
    ...
    *******************End Isofill Names List**********************
ok
Trying:
    ex=vcs.createisofill('isofill_ex1') # Create isofill 'isofill_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('isofill') # should now contain the 'isofill_ex1' isofill
Expecting:
    [...'isofill_ex1'...]
ok
Trying:
    ex2=vcs.createisofill('isofill_ex2','polar') # create 'isofill_ex2' from 'polar' template
Expecting nothing
ok
Trying:
    vcs.listelements('isofill') # should now contain the 'isofill_ex2' isofill
Expecting:
    [...'isofill_ex2'...]
ok
Trying:
    vcs.show('isoline') # show all available isoline
Expecting:
    *******************Isoline Names List**********************
    ...
    *******************End Isoline Names List**********************
ok
Trying:
    ex=vcs.createisoline('isoline_ex1') # Create isoline 'isoline_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('isoline') # should now contain the 'isoline_ex1' isoline
Expecting:
    [...'isoline_ex1'...]
ok
Trying:
    ex2=vcs.createisoline('isoline_ex2','polar') # create 'isoline_ex2' from 'polar' template
Expecting nothing
ok
Trying:
    vcs.listelements('isoline') # should now contain the 'isoline_ex2' isoline
Expecting:
    [...'isoline_ex2'...]
ok
Trying:
    vcs.show('line') # show all available line
Expecting:
    *******************Line Names List**********************
    ...
    *******************End Line Names List**********************
ok
Trying:
    ex=vcs.createline('line_ex1') # Create line 'line_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('line') # should now contain the 'line_ex1' line
Expecting:
    [...'line_ex1'...]
ok
Trying:
    ex2=vcs.createline('line_ex2','red') # create 'line_ex2' from 'red' template
Expecting nothing
ok
Trying:
    vcs.listelements('line') # should now contain the 'line_ex2' line
Expecting:
    [...'line_ex2'...]
ok
Trying:
    vcs.show('marker') # show all available marker
Expecting:
    *******************Marker Names List**********************
    ...
    *******************End Marker Names List**********************
ok
Trying:
    ex=vcs.createmarker('marker_ex1') # Create marker 'marker_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('marker') # should now contain the 'marker_ex1' marker
Expecting:
    [...'marker_ex1'...]
ok
Trying:
    ex2=vcs.createmarker('marker_ex2','red') # create 'marker_ex2' from 'red' template
Expecting nothing
ok
Trying:
    vcs.listelements('marker') # should now contain the 'marker_ex2' marker
Expecting:
    [...'marker_ex2'...]
ok
Trying:
    vcs.show('meshfill') # show all available meshfill
Expecting:
    *******************Meshfill Names List**********************
    ...
    *******************End Meshfill Names List**********************
ok
Trying:
    ex=vcs.createmeshfill('meshfill_ex1') # Create meshfill 'meshfill_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('meshfill') # should now contain the 'meshfill_ex1' meshfill
Expecting:
    [...'meshfill_ex1'...]
ok
Trying:
    ex2=vcs.createmeshfill('meshfill_ex2','a_polar_meshfill') # create 'meshfill_ex2' from 'a_polar_meshfill' template
Expecting nothing
ok
Trying:
    vcs.listelements('meshfill') # should now contain the 'meshfill_ex2' meshfill
Expecting:
    [...'meshfill_ex2'...]
ok
Trying:
    vcs.show('projection') # show all available projection
Expecting:
    *******************Projection Names List**********************
    ...
    *******************End Projection Names List**********************
ok
Trying:
    ex=vcs.createprojection('projection_ex1') # Create projection 'projection_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('projection') # should now contain the 'projection_ex1' projection
Expecting:
    [...'projection_ex1'...]
ok
Trying:
    ex2=vcs.createprojection('projection_ex2','polar') # create 'projection_ex2' from 'polar' template
Expecting nothing
**********************************************************************
File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 129, in vcs.manageElements.createprojection
Failed example:
    ex2=vcs.createprojection('projection_ex2','polar') # create 'projection_ex2' from 'polar' template
Exception raised:
    Traceback (most recent call last):
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/doctest.py", line 1315, in __run
        compileflags, 1) in test.globs
      File "<doctest vcs.manageElements.createprojection[3]>", line 1, in <module>
        ex2=vcs.createprojection('projection_ex2','polar') # create 'projection_ex2' from 'polar' template
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 120, in createprojection
        return projection.Proj(name, source)
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/projection.py", line 434, in __init__
        self.type = src.type
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/projection.py", line 987, in _settype
        value = VCS_validation_functions.checkProjType(self, 'type', value)
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/VCS_validation_functions.py", line 1440, in checkProjType
        checkedRaise(self, value, Exception, err)
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/VCS_validation_functions.py", line 59, in checkedRaise
        raise ex(err)
    Exception: type can either be ('linear', 'utm', 'state plane', 'albers equal area', 'lambert', 'mercator', 'polar', 'polyconic', 'equid conic a', 'transverse mercator', 'stereographic', 'lambert azimuthal', 'azimuthal', 'gnomonic', 'orthographic', 'gen. vert. near per', 'sinusoidal', 'equirectangular', 'miller', 'van der grinten', 'hotin', 'robinson', 'space oblique', 'alaska', 'interrupted goode', 'mollweide', 'interrupted mollweide', 'hammer', 'wagner iv', 'wagner vii', 'oblated') or (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)
Trying:
    vcs.show('scatter') # show all available scatter
Expecting:
    *******************Scatter Names List**********************
    ...
    *******************End Scatter Names List**********************
ok
Trying:
    ex=vcs.createscatter('scatter_ex1') # Create scatter 'scatter_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('scatter') # should now contain the 'scatter_ex1' scatter
Expecting:
    [...'scatter_ex1'...]
ok
Trying:
    vcs.show('taylordiagram') # show all available taylordiagram
Expecting:
    *******************Taylordiagram Names List**********************
    ...
    *******************End Taylordiagram Names List**********************
ok
Trying:
    ex=vcs.createtaylordiagram('taylordiagram_ex1') # Create taylordiagram 'taylordiagram_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('taylordiagram') # should now contain the 'taylordiagram_ex1' taylordiagram
Expecting:
    [...'taylordiagram_ex1'...]
ok
Trying:
    vcs.show('template') # show all available template
Expecting:
    *******************Template Names List**********************
    ...
    *******************End Template Names List**********************
ok
Trying:
    ex=vcs.createtemplate('template_ex1') # Create template 'template_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('template') # should now contain the 'template_ex1' template
Expecting:
    [...'template_ex1'...]
ok
Trying:
    ex2=vcs.createtemplate('template_ex2','polar') # create 'template_ex2' from 'polar' template
Expecting nothing
ok
Trying:
    vcs.listelements('template') # should now contain the 'template_ex2' template
Expecting:
    [...'template_ex2'...]
ok
Trying:
    vcs.show('textcombined') # show all available textcombined
Expecting:
    *******************Textcombined Names List**********************
    ...
    *******************End Textcombined Names List**********************
**********************************************************************
File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 1343, in vcs.manageElements.createtext
Failed example:
    vcs.show('textcombined') # show all available textcombined
Expected:
    *******************Textcombined Names List**********************
    ...
    *******************End Textcombined Names List**********************
Got:
    *******************Textcombined Names List**********************
    *******************End Textcombined Names List**********************
Trying:
    vcs.show('textorientation') # show all available textorientation
Expecting:
    *******************Textorientation Names List**********************
    ...
    *******************End Textorientation Names List**********************
ok
Trying:
    ex=vcs.createtextorientation('textorientation_ex1') # Create textorientation 'textorientation_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('textorientation') # should now contain the 'textorientation_ex1' textorientation
Expecting:
    [...'textorientation_ex1'...]
ok
Trying:
    ex2=vcs.createtextorientation('textorientation_ex2','bigger') # create 'textorientation_ex2' from 'bigger' template
Expecting nothing
ok
Trying:
    vcs.listelements('textorientation') # should now contain the 'textorientation_ex2' textorientation
Expecting:
    [...'textorientation_ex2'...]
ok
Trying:
    vcs.show('texttable') # show all available texttable
Expecting:
    *******************Texttable Names List**********************
    ...
    *******************End Texttable Names List**********************
ok
Trying:
    ex=vcs.createtexttable('texttable_ex1') # Create texttable 'texttable_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('texttable') # should now contain the 'texttable_ex1' texttable
Expecting:
    [...'texttable_ex1'...]
ok
Trying:
    ex2=vcs.createtexttable('texttable_ex2','bigger') # create 'texttable_ex2' from 'bigger' template
Expecting nothing
ok
Trying:
    vcs.listelements('texttable') # should now contain the 'texttable_ex2' texttable
Expecting:
    [...'texttable_ex2'...]
ok
Trying:
    vcs.show('vector') # show all available vector
Expecting:
    *******************Vector Names List**********************
    ...
    *******************End Vector Names List**********************
ok
Trying:
    ex=vcs.createvector('vector_ex1') # Create vector 'vector_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('vector') # should now contain the 'vector_ex1' vector
Expecting:
    [...'vector_ex1'...]
ok
Trying:
    vcs.show('xvsy') # show all available xvsy
Expecting:
    *******************Xvsy Names List**********************
    ...
    *******************End Xvsy Names List**********************
ok
Trying:
    ex=vcs.createxvsy('xvsy_ex1') # Create xvsy 'xvsy_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('xvsy') # should now contain the 'xvsy_ex1' xvsy
Expecting:
    [...'xvsy_ex1'...]
ok
Trying:
    vcs.show('xyvsy') # show all available xyvsy
Expecting:
    *******************Xyvsy Names List**********************
    ...
    *******************End Xyvsy Names List**********************
ok
Trying:
    ex=vcs.createxyvsy('xyvsy_ex1') # Create xyvsy 'xyvsy_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('xyvsy') # should now contain the 'xyvsy_ex1' xyvsy
Expecting:
    [...'xyvsy_ex1'...]
ok
Trying:
    vcs.show('yxvsx') # show all available yxvsx
Expecting:
    *******************Yxvsx Names List**********************
    ...
    *******************End Yxvsx Names List**********************
ok
Trying:
    ex=vcs.createyxvsx('yxvsx_ex1') # Create yxvsx 'yxvsx_ex1' that inherits from 'default'
Expecting nothing
ok
Trying:
    vcs.listelements('yxvsx') # should now contain the 'yxvsx_ex1' yxvsx
Expecting:
    [...'yxvsx_ex1'...]
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('3d_dual_scalar') # Show all the existing 3d_dual_scalar graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.get3d_dual_scalar()  # instance of 'default' 3d_dual_scalar graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    slab2 = f('v') # need 2 slabs, so get another
Expecting nothing
ok
Trying:
    a.plot(ex, slab1, slab2) # plot using specified 3d_dual_scalar object
Expecting:
    <vcs.displayplot.Dp ...>
**********************************************************************
File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 1611, in vcs.manageElements.get3d_dual_scalar
Failed example:
    a.plot(ex, slab1, slab2) # plot using specified 3d_dual_scalar object
Expected:
    <vcs.displayplot.Dp ...>
Got:
    initCamera: Camera => ((0.0, 0.0, 540.0), (0.0, 0.0, 0.0), (0.0, 1.0, 0.0)) 
    <vcs.displayplot.Dp object at 0x123a846e0>
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('3d_scalar') # Show all the existing 3d_scalar graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.get3d_scalar()  # instance of 'default' 3d_scalar graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.plot(ex, slab1) # plot using specified 3d_scalar object
Expecting:
    <vcs.displayplot.Dp ...>
**********************************************************************
File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 1570, in vcs.manageElements.get3d_scalar
Failed example:
    a.plot(ex, slab1) # plot using specified 3d_scalar object
Expected:
    <vcs.displayplot.Dp ...>
Got:
    initCamera: Camera => ((0.0, 0.0, 540.0), (0.0, 0.0, 0.0), (0.0, 1.0, 0.0)) 
    <vcs.displayplot.Dp object at 0x1186ff7f8>
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('3d_vector') # Show all the existing 3d_vector graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.get3d_vector()  # instance of 'default' 3d_vector graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    slab2 = f('v') # need 2 slabs, so get another
Expecting nothing
ok
Trying:
    a.plot(ex, slab1, slab2) # plot using specified 3d_vector object
Expecting:
    <vcs.displayplot.Dp ...>
**********************************************************************
File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 1651, in vcs.manageElements.get3d_vector
Failed example:
    a.plot(ex, slab1, slab2) # plot using specified 3d_vector object
Expected:
    <vcs.displayplot.Dp ...>
Got:
    Sample rate: 6 
    Sample rate: 6 
    initCamera: Camera => ((0.0, 0.0, 540.0), (0.0, 0.0, 0.0), (0.0, 1.0, 0.0)) 
    <vcs.displayplot.Dp object at 0x123a49a28>
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('boxfill') # Show all the existing boxfill graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getboxfill()  # instance of 'default' boxfill graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.boxfill(ex, slab1) # plot using specified boxfill object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.getboxfill('polar')  # instance of 'polar' boxfill graphics method
Expecting nothing
ok
Trying:
    a.boxfill(ex2, slab1) # plot using specified boxfill object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('colormap') # Show all the existing colormap secondary methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getcolormap()  # instance of 'default' colormap secondary method
Expecting nothing
ok
Trying:
    ex2=vcs.getcolormap('rainbow')  # instance of 'rainbow' colormap secondary method
Expecting nothing
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('fillarea') # Show all the existing fillarea secondary methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getfillarea()  # instance of 'default' fillarea secondary method
Expecting nothing
ok
Trying:
    a.fillarea(ex) # plot using specified fillarea object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('isofill') # Show all the existing isofill graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getisofill()  # instance of 'default' isofill graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.isofill(ex, slab1) # plot using specified isofill object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.getisofill('polar')  # instance of 'polar' isofill graphics method
Expecting nothing
ok
Trying:
    a.isofill(ex2, slab1) # plot using specified isofill object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('isoline') # Show all the existing isoline graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getisoline()  # instance of 'default' isoline graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.isoline(ex, slab1) # plot using specified isoline object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.getisoline('polar')  # instance of 'polar' isoline graphics method
Expecting nothing
ok
Trying:
    a.isoline(ex2, slab1) # plot using specified isoline object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('line') # Show all the existing line secondary methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getline()  # instance of 'default' line secondary method
Expecting nothing
ok
Trying:
    a.line(ex) # plot using specified line object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.getline('red')  # instance of 'red' line secondary method
Expecting nothing
ok
Trying:
    a.line(ex2) # plot using specified line object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('marker') # Show all the existing marker secondary methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getmarker()  # instance of 'default' marker secondary method
Expecting nothing
ok
Trying:
    a.marker(ex) # plot using specified marker object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.getmarker('red')  # instance of 'red' marker secondary method
Expecting nothing
ok
Trying:
    a.marker(ex2) # plot using specified marker object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('meshfill') # Show all the existing meshfill graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getmeshfill()  # instance of 'default' meshfill graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.meshfill(ex, slab1) # plot using specified meshfill object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.getmeshfill('a_polar_meshfill')  # instance of 'a_polar_meshfill' meshfill graphics method
Expecting nothing
ok
Trying:
    a.meshfill(ex2, slab1) # plot using specified meshfill object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('projection') # Show all the existing projection graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getprojection()  # instance of 'default' projection graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.plot(ex, slab1) # plot using specified projection object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.getprojection('polar')  # instance of 'polar' projection graphics method
Expecting nothing
ok
Trying:
    a.plot(ex2, slab1) # plot using specified projection object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('scatter') # Show all the existing scatter graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getscatter('default_scatter_')  # instance of ''default_scatter_'' scatter graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    slab2 = f('v') # need 2 slabs, so get another
Expecting nothing
ok
Trying:
    a.scatter(ex, slab1, slab2) # plot using specified scatter object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('taylordiagram') # Show all the existing taylordiagram graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.gettaylordiagram()  # instance of 'default' taylordiagram graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.taylordiagram(ex, slab1) # plot using specified taylordiagram object
Expecting:
    <vcs.displayplot.Dp ...>
**********************************************************************
File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 255, in vcs.manageElements.gettaylordiagram
Failed example:
    a.taylordiagram(ex, slab1) # plot using specified taylordiagram object
Exception raised:
    Traceback (most recent call last):
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/doctest.py", line 1315, in __run
        compileflags, 1) in test.globs
      File "<doctest vcs.manageElements.gettaylordiagram[6]>", line 1, in <module>
        a.taylordiagram(ex, slab1) # plot using specified taylordiagram object
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/Canvas.py", line 1275, in taylordiagram
        return self.__plot(arglist, parms)
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/Canvas.py", line 3634, in __plot
        t.plot(arglist[0], canvas=self, template=arglist[2], **keyargs)
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/taylor.py", line 1965, in plot
        self.draw(canvas, data)
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/taylor.py", line 1205, in draw
        d0 = float(data[i][0])
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/numpy/ma/core.py", line 4182, in __float__
        raise TypeError("Only length-1 arrays can be converted "
    TypeError: Only length-1 arrays can be converted to Python scalars
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('template') # Show all the existing template graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.gettemplate()  # instance of 'default' template graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.plot(ex, slab1) # plot using specified template object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    ex2=vcs.gettemplate('polar')  # instance of 'polar' template graphics method
Expecting nothing
ok
Trying:
    a.plot(ex2, slab1) # plot using specified template object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('textcombined') # Show all the existing textcombined secondary methods
Expecting:
    [...]
ok
Trying:
    vcs.createtextcombined('EXAMPLE_tt', 'qa', 'EXAMPLE_tto', '7left') # Create 'EXAMPLE_tt' and 'EXAMPLE_tto'
Expecting:
    <vcs.textcombined.Tc ...>
**********************************************************************
File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 1455, in vcs.manageElements.gettextcombined
Failed example:
    vcs.createtextcombined('EXAMPLE_tt', 'qa', 'EXAMPLE_tto', '7left') # Create 'EXAMPLE_tt' and 'EXAMPLE_tto'
Exception raised:
    Traceback (most recent call last):
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/doctest.py", line 1315, in __run
        compileflags, 1) in test.globs
      File "<doctest vcs.manageElements.gettextcombined[2]>", line 1, in <module>
        vcs.createtextcombined('EXAMPLE_tt', 'qa', 'EXAMPLE_tto', '7left') # Create 'EXAMPLE_tt' and 'EXAMPLE_tto'
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 1390, in createtextcombined
        Tt_name, Tt_source = check_name_source(Tt_name, Tt_source, 'texttable')
      File "/Users/brown308/anaconda/envs/2.8/lib/python2.7/site-packages/vcs/manageElements.py", line 57, in check_name_source
        raise vcsError("Error %s object named %s already exists" % (typ, name))
    vcsError: Error texttable object named EXAMPLE_tt already exists
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('textorientation') # Show all the existing textorientation secondary methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.gettextorientation()  # instance of 'default' textorientation secondary method
Expecting nothing
ok
Trying:
    ex2=vcs.gettextorientation('bigger')  # instance of 'bigger' textorientation secondary method
Expecting nothing
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('texttable') # Show all the existing texttable secondary methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.gettexttable()  # instance of 'default' texttable secondary method
Expecting nothing
ok
Trying:
    ex2=vcs.gettexttable('bigger')  # instance of 'bigger' texttable secondary method
Expecting nothing
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('vector') # Show all the existing vector graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getvector()  # instance of 'default' vector graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    slab2 = f('v') # need 2 slabs, so get another
Expecting nothing
ok
Trying:
    a.vector(ex, slab1, slab2) # plot using specified vector object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('xvsy') # Show all the existing xvsy graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getxvsy()  # instance of 'default_xvsy_' xvsy graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    slab2 = f('v') # need 2 slabs, so get another
Expecting nothing
ok
Trying:
    a.xvsy(ex, slab1, slab2) # plot using specified xvsy object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('xyvsy') # Show all the existing xyvsy graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getxyvsy('default_xyvsy_')  # instance of ''default_xyvsy_'' xyvsy graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.xyvsy(ex, slab1) # plot using specified xyvsy object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    vcs.listelements('yxvsx') # Show all the existing yxvsx graphics methods
Expecting:
    [...]
ok
Trying:
    ex=vcs.getyxvsx()  # instance of 'default_yxvsx_' yxvsx graphics method
Expecting nothing
ok
Trying:
    import cdms2 # Need cdms2 to create a slab
Expecting nothing
ok
Trying:
    f = cdms2.open(vcs.sample_data+'/clt.nc') # use cdms2 to open a data file
Expecting nothing
ok
Trying:
    slab1 = f('u') # use the data file to create a cdms2 slab
Expecting nothing
ok
Trying:
    a.yxvsx(ex, slab1) # plot using specified yxvsx object
Expecting:
    <vcs.displayplot.Dp ...>
ok
Trying:
    a=vcs.init()
Expecting nothing
ok
Trying:
    iso=a.createisoline('dean') # Create an instance of an isoline object
Expecting nothing
ok
Trying:
    a.removeobject(iso) # Remove isoline object from VCS list
Expecting:
    'Removed isoline object dean'
ok
Trying:
    vcs.show('line')
Expecting:
    *******************Line Names List**********************
    ...
    *******************End Line Names List**********************
ok
Trying:
    new_isoline=vcs.createisoline('new_iso')
Expecting nothing
ok
Trying:
    vcs.setLineAttributes(new_isoline, 'continents')
Expecting nothing
ok
25 items had no tests:
    vcs.manageElements
    vcs.manageElements.check_name_source
    vcs.manageElements.create1d
    vcs.manageElements.get1d
    vcs.manageElements.removeCp
    vcs.manageElements.removeG
    vcs.manageElements.removeG1d
    vcs.manageElements.removeGSp
    vcs.manageElements.removeGXY
    vcs.manageElements.removeGXy
    vcs.manageElements.removeGYx
    vcs.manageElements.removeGfb
    vcs.manageElements.removeGfi
    vcs.manageElements.removeGfm
    vcs.manageElements.removeGi
    vcs.manageElements.removeGtd
    vcs.manageElements.removeGv
    vcs.manageElements.removeP
    vcs.manageElements.removeProj
    vcs.manageElements.removeTc
    vcs.manageElements.removeTf
    vcs.manageElements.removeTl
    vcs.manageElements.removeTm
    vcs.manageElements.removeTo
    vcs.manageElements.removeTt
39 items passed all tests:
   3 tests in vcs.manageElements.create3d_dual_scalar
   3 tests in vcs.manageElements.create3d_scalar
   3 tests in vcs.manageElements.create3d_vector
   5 tests in vcs.manageElements.createboxfill
   5 tests in vcs.manageElements.createcolormap
   3 tests in vcs.manageElements.createfillarea
   5 tests in vcs.manageElements.createisofill
   5 tests in vcs.manageElements.createisoline
   5 tests in vcs.manageElements.createline
   5 tests in vcs.manageElements.createmarker
   5 tests in vcs.manageElements.createmeshfill
   3 tests in vcs.manageElements.createscatter
   3 tests in vcs.manageElements.createtaylordiagram
   5 tests in vcs.manageElements.createtemplate
   5 tests in vcs.manageElements.createtextorientation
   5 tests in vcs.manageElements.createtexttable
   3 tests in vcs.manageElements.createvector
   3 tests in vcs.manageElements.createxvsy
   3 tests in vcs.manageElements.createxyvsy
   3 tests in vcs.manageElements.createyxvsx
   9 tests in vcs.manageElements.getboxfill
   4 tests in vcs.manageElements.getcolormap
   4 tests in vcs.manageElements.getfillarea
   9 tests in vcs.manageElements.getisofill
   9 tests in vcs.manageElements.getisoline
   6 tests in vcs.manageElements.getline
   6 tests in vcs.manageElements.getmarker
   9 tests in vcs.manageElements.getmeshfill
   9 tests in vcs.manageElements.getprojection
   8 tests in vcs.manageElements.getscatter
   9 tests in vcs.manageElements.gettemplate
   4 tests in vcs.manageElements.gettextorientation
   4 tests in vcs.manageElements.gettexttable
   8 tests in vcs.manageElements.getvector
   8 tests in vcs.manageElements.getxvsy
   7 tests in vcs.manageElements.getxyvsy
   7 tests in vcs.manageElements.getyxvsx
   3 tests in vcs.manageElements.removeobject
   3 tests in vcs.manageElements.setLineAttributes
**********************************************************************
7 items had failures:
   2 of   5 in vcs.manageElements.createprojection
   1 of   3 in vcs.manageElements.createtext
   1 of   8 in vcs.manageElements.get3d_dual_scalar
   1 of   7 in vcs.manageElements.get3d_scalar
   1 of   8 in vcs.manageElements.get3d_vector
   1 of   7 in vcs.manageElements.gettaylordiagram
   1 of   5 in vcs.manageElements.gettextcombined
249 tests in 71 items.
241 passed and 8 failed.
***Test Failed*** 8 failures.
