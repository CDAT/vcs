version: 2

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
       mkdir -p workspace
       git clone -b validateNightlyNew git@github.com:CDAT/cdat workspace/cdat
       # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &conda_rerender
    name: conda_rerender
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make conda-rerender conda=$WORKDIR/miniconda/bin/conda workdir=$WORKDIR last_stable=$LAST_STABLE branch=$CIRCLE_BRANCH

  - &conda_build
    name: conda_build
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make conda-build conda=$WORKDIR/miniconda/bin/conda workdir=$WORKDIR artifcat_dir=$PWD/artifacts copy_conda_package=1

  - &setup_run_tests
    name: setup_run_tests
    environment:
       PKGS: "udunits2 testsrunner matplotlib image-compare nbformat ipywidgets"
       # Note that vcsaddons should not be here, we have circular dependency,
       # vcsaddons build depends on vcs, but some of the notebooks import vcsaddons
       DOC_PKGS: "sphinxcontrib-websupport nbsphinx jupyter_client jupyterlab vcsaddons"
       CHANNELS: "-c cdat/label/nightly -c conda-forge"
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make setup-tests conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME extra_pkgs="$CONDA_PY_VER $LIBNETCDF"

       make conda-dump-env conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME artifcat_dir=$PWD/artifacts conda_env_name=$CIRCLE_JOB

  - &get_testdata
    name: get_testdata
    command: |
      make get-testdata conda=$WORKDIR/miniconda/bin/conda 

  - &run_tests
    name: run_tests
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make run-tests conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME

  - &conda_env_export
    name: conda_env_expprt
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make conda-list conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME

  - &conda_upload
    name: conda_upload
    command: |
       if [[ $CIRCLE_BRANCH != "master" ]]; then
          exit 0
       fi
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make conda-upload conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME conda_upload_token=$CONDA_UPLOAD_TOKEN user=$USER label=$LABEL

  - &run_coveralls
    name: run_coveralls
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make run-coveralls conda=$WORKDIR/miniconda/bin/conda 

  - &make_doc_test
    name: make_doc_test
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make run-doc-test conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME
    no_output_timeout: 20m


jobs:
   macos_setup:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - persist_to_workspace:
              root: .
              paths: 
                 - macos_build

   linux_setup:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - persist_to_workspace:
              root: .
              paths:
                 - linux_build

   #
   # run tests with libnetcdf nompi
   #
   macos_vcs_nompi_py36:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_nompi_py37:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_nompi_py38:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_nompi_py36:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_nompi_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         #COVERAGE: "-c tests/coverage.json --coverage-from-egg"
         #COVERAGE_PKGS: "coverage coveralls"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         #- run: *run_coveralls
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_nompi_py38:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   #
   # run tests with libnetcdf mpich
   #
   macos_vcs_mpich_py36:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_mpich_py37:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_mpich_py38:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_mpich_py36:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_mpich_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_mpich_py38:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   #
   # run tests with libnetcdf openmpi
   #
   macos_vcs_openmpi_py36:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_openmpi_py37:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_openmpi_py38:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_openmpi_py36:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_openmpi_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_openmpi_py38:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   upload:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         VERSION: "8.2"
         USER: "cdat"
         LABEL: "nightly"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_upload

   upload_MACOS:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         VERSION: "8.2"
         USER: "cdat"
         LABEL: "nightly"
         #LABEL: "debug"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_upload

workflows:
   # Might be work looking into matrix to simplify, if we can use version 2.1.
   # https://circleci.com/docs/2.0/configuration-reference/#matrix-requires-version-21
   version: 2
   vcs:
      jobs:
         - macos_setup
         - linux_setup
         - macos_vcs_nompi_py36:
              requires:
                 - macos_setup
         - macos_vcs_nompi_py37:
              requires:
                 - macos_setup
         - macos_vcs_nompi_py38:
              requires:
                 - macos_setup
         - linux_vcs_nompi_py36:
              requires:
                 - linux_setup
         - linux_vcs_nompi_py37:
              requires:
                 - linux_setup
         - linux_vcs_nompi_py38:
              requires:
                 - linux_setup

         #- macos_vcs_mpich_py36:
         #     requires:
         #        - macos_setup
         #- macos_vcs_mpich_py37:
         #     requires:
         #        - macos_setup
         #- macos_vcs_mpich_py38:
         #     requires:
         #        - macos_setup
         #- linux_vcs_mpich_py36:
         #     requires:
         #        - linux_setup
         #- linux_vcs_mpich_py37:
         #     requires:
         #        - linux_setup
         #- linux_vcs_mpich_py38:
         #     requires:
         #        - linux_setup

         - macos_vcs_openmpi_py36:
              requires:
                 - macos_setup
         - macos_vcs_openmpi_py37:
              requires:
                 - macos_setup
         - macos_vcs_openmpi_py38:
              requires:
                 - macos_setup
         - linux_vcs_openmpi_py36:
              requires:
                 - linux_setup
         - linux_vcs_openmpi_py37:
              requires:
                 - linux_setup
         - linux_vcs_openmpi_py38:
              requires:
                 - linux_setup

         - upload:
              requires:
                 - macos_vcs_nompi_py36
                 - macos_vcs_nompi_py37
                 - macos_vcs_nompi_py38
                 - linux_vcs_nompi_py36
                 - linux_vcs_nompi_py37
                 - linux_vcs_nompi_py38

                 #- macos_vcs_mpich_py36
                 #- macos_vcs_mpich_py37
                 #- macos_vcs_mpich_py38
                 #- linux_vcs_mpich_py36
                 #- linux_vcs_mpich_py37
                 #- linux_vcs_mpich_py38

                 - macos_vcs_openmpi_py36
                 - macos_vcs_openmpi_py37
                 - macos_vcs_openmpi_py38
                 - linux_vcs_openmpi_py36
                 - linux_vcs_openmpi_py37
                 - linux_vcs_openmpi_py38
