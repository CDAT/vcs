version: 2

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
       mkdir -p workspace
       git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
       ##### install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &conda_rerender
    name: conda_rerender
    command: |
       git clone -b install_requests.1 https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes 
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --set anaconda_upload no
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -l $LAST_STABLE -B 0 -p $PKG_NAME -b $CIRCLE_BRANCH --do_rerender

  - &conda_rerender_macos
    name: conda_rerender_macos
    command: |
       git clone -b install_requests https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes 
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --set always_yes yes
       conda config --add channels conda-forge --force
       conda config --set channel_priority strict
       conda install -n base -c conda-forge conda-build anaconda-client conda-smithy conda-verify conda-forge-pinning conda-forge-build-setup conda-forge-ci-setup
       conda config --set anaconda_upload no
       git clone -b fix_readthedocs https://github.com/CDAT/vcs.git $WORKDIR/vcs
       mv $WORKDIR/vcs/recipe/temp.meta.yaml.in $WORKDIR/vcs/recipe/meta.yaml
       cat $WORKDIR/vcs/recipe/meta.yaml
       cd $WORKDIR/vcs
       echo "recipe_dir: recipe" > $WORKDIR/vcs/conda-forge.yml
       conda smithy rerender

  - &conda_build
    name: conda_build
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --add channels conda-forge --force
       conda config --add channels cdat/label/nightly --force
       conda config --set channel_priority strict
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -p $PKG_NAME --build_version $BUILD_VARIANT_VER --do_build

  - &setup_run_tests
    name: setup_run_tests
    environment:
       PKGS: "udunits2 testsrunner mesalib matplotlib image-compare cdtime nbformat ipywidgets"
       DOC_PKGS: "sphinxcontrib-websupport nbsphinx libtiff jupyter_client"
       CHANNELS: "-c cdat/label/nightly -c conda-forge"
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda create -y -n $ENV_NAME --use-local $CHANNELS "$CONDA_PY_VER" $PKG_NAME $PKGS $DOC_PKGS $COVERAGE_PKGS $ADD_PKGS
       conda activate $ENV_NAME
       conda install -c conda-forge nb_conda nb_conda_kernels
       conda list

  - &get_testdata
    name: get_testdata
    command: |
      git clone git://github.com/cdat/uvcdat-testdata

  - &run_tests
    name: run_tests
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       #python run_tests.py -H -v2 -n 2 $COVERAGE
       python run_tests.py -n 4 -H -v2 --timeout=100000 --checkout-baseline --no-vtk-ui $COVERAGE
       RESULT=$?
       conda deactivate
       exit $RESULT

  - &conda_env_export
    name: conda_env_expprt
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       conda env export > $WORKDIR/env.yml
       cat $WORKDIR/env.yml

  - &conda_upload
    name: conda_upload
    command: |
       if [[ $CIRCLE_BRANCH != "master" ]]; then
          exit 0
       fi
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       UPLOAD_OPTIONS="-t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL"
       anaconda $UPLOAD_OPTIONS $WORKDIR/miniconda/conda-bld/noarch/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force

  - &run_coveralls
    name: run_coveralls
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       coveralls
       conda deactivate

  - &make_doc_test
    name: make_doc_test
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       cd docs
       make doctest
       DOC_RESULT=$?
       echo "*** $PY_VER doc test result: "${DOC_RESULT}
       exit $DOC_RESULT

jobs:
   macos_setup:
      macos:
         xcode: "11.3.1"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - persist_to_workspace:
              root: .
              paths: 
                 - macos_build

   linux_setup:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - persist_to_workspace:
              root: .
              paths:
                 - linux_build

   macos_vcs_py2:
      macos:
         xcode: "11.3.1"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python<3"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_py37:
      macos:
         xcode: "11.3.1"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_py2:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python<3"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         ADD_PKGS: "vcsaddons"
         #COVERAGE: "-c tests/coverage.json --coverage-from-egg"
         #COVERAGE_PKGS: "coverage coveralls"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         #- run: *run_coveralls
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   upload:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         VERSION: "8.2"
         USER: "cdat"
         LABEL: "nightly"
      steps:
         - attach_workspace:
              at: .
         - run: pwd
         - run: *conda_upload

workflows:
   version: 2
   vcs:
      jobs:
         - macos_setup
         #- linux_setup
         - macos_vcs_py2:
              requires:
                 - macos_setup
         - macos_vcs_py37:
              requires:
                 - macos_setup
         #- linux_vcs_py2:
         #     requires:
         #        - linux_setup
         #- linux_vcs_py37:
         #     requires:
         #        - linux_setup
         #- upload:
         #     requires:
         #        - macos_vcs_py2
         #        - macos_vcs_py37
         #        - linux_vcs_py2
         #        - linux_vcs_py37
