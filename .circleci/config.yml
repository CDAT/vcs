version: 2.1

parameters:
   pkg_name:
      type: string
      default: "vcs"
   repo_name:
      type: string
      default: "vcs"
   last_stable:
      type: string
      default: "8.2"
   user:
      type: string
      default: "cdat"
   label:
      type: string
      default: "nightly"
   env_name:
      type: string
      default: "test_vcs"


aliases:
  - &setup_env
    name: setup_env
    command: |
       if [[ `uname` == "Darwin" ]]; then
          echo 'export WORKDIR=/Users/distiller/project/workdir/macos' >> $BASH_ENV
       else
          echo 'export WORKDIR=/home/circleci/project/workdir/linux' >> $BASH_ENV
       fi
       source $BASH_ENV
       mkdir -p $WORKDIR

  - &setup_miniconda
    name: setup_miniconda
    command: |
       source $BASH_ENV
       mkdir -p $WORKDIR
       git clone -b validateNightlyNew https://github.com/CDAT/cdat.git $WORKDIR/cdat
       # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python $WORKDIR/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &conda_rerender
    name: conda_rerender
    command: |
       source $BASH_ENV
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       make conda-rerender conda=$WORKDIR/miniconda/bin/conda workdir=$WORKDIR last_stable=$LAST_STABLE branch=$CIRCLE_BRANCH

  - &conda_build
    name: conda_build
    command: |
       source $BASH_ENV
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       os=`uname`
       artifacts_dir="artifacts/artifacts.${os}.noarch"
       make conda-build conda=$WORKDIR/miniconda/bin/conda workdir=$WORKDIR artifact_dir=$PWD/$artifacts_dir

  - &setup_run_tests
    name: setup_run_tests
    command: |
       source $BASH_ENV
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       export CONDA_PY_VER="python=$PY_VER"
       export LIBNETCDF_VER="libnetcdf=*=${LIBNETCDF}_*"
       make setup-tests conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME extra_pkgs="$CONDA_PY_VER $LIBNETCDF_VER $COVERAGE_PKGS"
       make conda-dump-env conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME artifact_dir=$PWD/spec_artifacts conda_env_filename=$CIRCLE_JOB


  - &get_testdata
    name: get_testdata
    command: |
       make get-testdata

  - &run_tests
    name: run_tests
    command: |
       source $BASH_ENV
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       make run-tests conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME

  - &conda_upload
    name: conda_upload
    command: |
       source $BASH_ENV
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda install -c conda-forge anaconda-client
       UPLOAD_OPTIONS="conda_upload_token=$CONDA_UPLOAD_TOKEN user=$USER label=$LABEL"
       make conda-upload $UPLOAD_OPTIONS conda=$WORKDIR/miniconda/bin/conda artifact_dir="$PWD/artifacts/*Linux*/"

  - &run_coveralls
    name: run_coveralls
    command: |
       source $BASH_ENV
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       coveralls
       conda deactivate

  - &make_doc_test
    name: make_doc_test
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base

       make run-doc-test conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME
    no_output_timeout: 20m

executors:
   linux:
      machine:
         image: circleci/classic:latest
   macos:
      macos:
         xcode: "11.4.0"

jobs:
   build:
      parameters:
         os:
            type: executor
      executor: << parameters.os >>
      environment:
         PKG_NAME: << pipeline.parameters.pkg_name >>
         REPO_NAME: << pipeline.parameters.repo_name >>
         LAST_STABLE: << pipeline.parameters.last_stable >>
      steps:
         - checkout
         - run: *setup_env
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - persist_to_workspace:
              root: .
              paths: 
                 - workdir
                 - artifacts

   test:
      parameters:
         os:
            type: executor
         py_ver: 
            type: string
         libnetcdf: 
            type: string
      executor: << parameters.os >>
      environment:
         PKG_NAME: << pipeline.parameters.pkg_name >>
         REPO_NAME: << pipeline.parameters.repo_name >>
         ENV_NAME: << pipeline.parameters.env_name >>
         PY_VER: << parameters.py_ver >>
         LIBNETCDF: << parameters.libnetcdf >>
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: echo "LIBNETCDF=$LIBNETCDF" >> $BASH_ENV
         - run: *setup_env
         - run: *setup_run_tests
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png
         - store_artifacts:
              path: spec_artifacts
              destination: spec_artifacts

   upload:
      machine:
         image: circleci/classic:latest
      environment:
         PKG_NAME: << pipeline.parameters.pkg_name >>
         VERSION: << pipeline.parameters.last_stable >>
         USER: << pipeline.parameters.user >>
         LABEL: << pipeline.parameters.label >>
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_env
         - run: *conda_upload

workflows:
   dv3d:
      jobs:
         - build:
              matrix:
                 parameters:
                    os: [ linux, macos ]
              name: build-<< matrix.os >>
         - test:
              matrix:
                 parameters:
                    os: [ linux, macos ]
                    py_ver: [ "3.6", "3.7" ]
                    libnetcdf: [ "nompi", "mpi_mpich", "mpi_openmpi" ]
              name: test-<< matrix.os >>-<< matrix.py_ver >>-<< matrix.libnetcdf >>
              requires:
                 - build-<< matrix.os >>

         - upload:
              requires:
                 - test



jobs:
   macos_setup:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - store_artifacts:
              path: artifacts
         - persist_to_workspace:
              root: .
              paths: 
                 - macos_build

   linux_setup:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         REPO_NAME: "vcs"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - store_artifacts:
              path: artifacts
         - persist_to_workspace:
              root: .
              paths:
                 - linux_build

   #
   # run tests with libnetcdf nompi
   #
   macos_vcs_nompi_py36:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_nompi_py37:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_nompi_py38:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_nompi_py36:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_nompi_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         #COVERAGE: "-c tests/coverage.json --coverage-from-egg"
         #COVERAGE_PKGS: "coverage coveralls"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         #- run: *run_coveralls
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_nompi_py38:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=nompi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   #
   # run tests with libnetcdf mpich
   #
   macos_vcs_mpich_py36:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_mpich_py37:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_mpich_py38:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_mpich_py36:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_mpich_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_mpich_py38:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_mpich_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   #
   # run tests with libnetcdf openmpi
   #
   macos_vcs_openmpi_py36:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_openmpi_py37:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   macos_vcs_openmpi_py38:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_openmpi_py36:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.6,<3.7"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_openmpi_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.7,<3.8"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - run: *make_doc_test
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   linux_vcs_openmpi_py38:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         ENV_NAME: "test_vcs"
         CONDA_PY_VER: "python>=3.8,<3.9"
         LIBNETCDF: "libnetcdf=*=mpi_openmpi_*"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - store_artifacts:
              path: artifacts
         - run: *conda_env_export
         - run: *get_testdata
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html
         - store_artifacts:
             path: tests_png
             destination: tests_png

   upload:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "vcs"
         VERSION: "8.2"
         USER: "cdat"
         LABEL: "nightly"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_upload

   upload_MACOS:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "vcs"
         VERSION: "8.2"
         USER: "cdat"
         LABEL: "nightly"
         #LABEL: "debug"
      steps:
         - attach_workspace:
              at: .
         - run: *conda_upload

workflows:
   # Might be work looking into matrix to simplify, if we can use version 2.1.
   # https://circleci.com/docs/2.0/configuration-reference/#matrix-requires-version-21
   version: 2
   vcs:
      jobs:
         - macos_setup
         - linux_setup
         - macos_vcs_nompi_py36:
              requires:
                 - macos_setup
         - macos_vcs_nompi_py37:
              requires:
                 - macos_setup
         - macos_vcs_nompi_py38:
              requires:
                 - macos_setup
         - linux_vcs_nompi_py36:
              requires:
                 - linux_setup
         - linux_vcs_nompi_py37:
              requires:
                 - linux_setup
         - linux_vcs_nompi_py38:
              requires:
                 - linux_setup

         #- macos_vcs_mpich_py36:
         #     requires:
         #        - macos_setup
         #- macos_vcs_mpich_py37:
         #     requires:
         #        - macos_setup
         #- macos_vcs_mpich_py38:
         #     requires:
         #        - macos_setup
         #- linux_vcs_mpich_py36:
         #     requires:
         #        - linux_setup
         #- linux_vcs_mpich_py37:
         #     requires:
         #        - linux_setup
         #- linux_vcs_mpich_py38:
         #     requires:
         #        - linux_setup

         - macos_vcs_openmpi_py36:
              requires:
                 - macos_setup
         - macos_vcs_openmpi_py37:
              requires:
                 - macos_setup
         - macos_vcs_openmpi_py38:
              requires:
                 - macos_setup
         - linux_vcs_openmpi_py36:
              requires:
                 - linux_setup
         - linux_vcs_openmpi_py37:
              requires:
                 - linux_setup
         - linux_vcs_openmpi_py38:
              requires:
                 - linux_setup

         - upload:
              requires:
                 - macos_vcs_nompi_py36
                 - macos_vcs_nompi_py37
                 - macos_vcs_nompi_py38
                 - linux_vcs_nompi_py36
                 - linux_vcs_nompi_py37
                 - linux_vcs_nompi_py38

                 #- macos_vcs_mpich_py36
                 #- macos_vcs_mpich_py37
                 #- macos_vcs_mpich_py38
                 #- linux_vcs_mpich_py36
                 #- linux_vcs_mpich_py37
                 #- linux_vcs_mpich_py38

                 - macos_vcs_openmpi_py36
                 - macos_vcs_openmpi_py37
                 - macos_vcs_openmpi_py38
                 - linux_vcs_openmpi_py36
                 - linux_vcs_openmpi_py37
                 - linux_vcs_openmpi_py38
