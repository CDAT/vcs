version: 2

general:
  artifacts:
    - tests_html
    - tests_png

#checkout:
#  post:
#    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      echo "xxx setup_miniconda xxx"
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      ls workspace/cdat
      # following will install miniconda3 under $WORKDIR/miniconda/bin
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &get_testdata
    name: get_testdata
    command: | 
      ls -l  workspace
      git clone git://github.com/cdat/uvcdat-testdata

  - &create_conda_env
    name: create_conda_env
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       #conda config --set always_yes yes --set changeps1 no
       #conda update -y -q conda
       #conda config --set anaconda_upload no
       conda create -q -n py2 -c cdat/label/nightly -c conda-forge -c cdat cdms2 cdat_info udunits2 nose flake8 mesalib nose image-compare flake8 matplotlib image-compare genutil dv3d cdutil cdtime "proj4<5" "python<3" "numpy>1.14" 
       conda create -q -n py3 -c cdat/label/nightly -c conda-forge -c cdat cdms2 nose flake8 cdat_info udunits2 mesalib nose image-compare flake8 matplotlib image-compare genutil dv3d cdutil cdtime nbsphinx easydev "proj4<5" "python>3" "numpy>1.14" 

  - &setup_vcs
    name: setup_vcs
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       source activate py2
       python setup.py install --old-and-unmanageable
       source activate py3
       python setup.py install --old-and-unmanageable

  - &run_vcs_tests
    name: run_vcs_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       export UVCDAT_SETUP_PATH=${HOME}
       source activate py2
       python run_tests.py -v2 -n 2 -g --no-vtk-ui       
       RESULT=$?
       echo "py2 test command exit result:",$RESULT
       source activate py3
       python run_tests.py -n 2 -g --no-vtk-ui
       RESULT=$(( $RESULT + $? ))
       cd docs
       make doctest
       RESULT=$(( $RESULT + $? ))
       cd ..
       echo "py3 test command exit result:",$RESULT
       ##REVISIT -- need to check results and upload

jobs:

  macos_vcs:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_vcs"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *get_testdata
      - run: *create_conda_env
      - run: *setup_vcs
      - run: *run_vcs_tests

  linux_vcs:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_macos_vcs"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *get_testdata
      - run: *create_conda_env
      - run: *setup_vcs
      - run: *run_vcs_tests


  centos_vcs:
    docker:
      - image: muryanto1/cci-centos68
    environment:
      WORKDIR: "workspace/test_centos_vcs"
    steps:
      - run: echo "xxx CentOS ..."
      - run: id
      - run: uname -a
      - run: git clone -b $CIRCLE_BRANCH https://github.com/CDAT/vcs
      - run: *setup_miniconda

workflows:
  version: 2
  nightly:
    jobs:
      #- macos_vcs
      #- linux_vcs
      - centos_vcs
